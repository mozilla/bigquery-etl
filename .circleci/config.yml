version: 2
jobs:
  build:
    docker:
    - image: python:3.7
    steps:
    - checkout
    - restore_cache:
        keys:
          # when lock files change, use increasingly general patterns to restore cache
          - python-packages-v1-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "constraints.txt" }}
          - python-packages-v1-{{ .Branch }}-{{ checksum "requirements.txt" }}-
          - python-packages-v1-{{ .Branch }}-
          - python-packages-v1-
    - run:
        name: Build
        command: |
          python3.7 -m venv venv/
          venv/bin/pip install --upgrade -r requirements.txt
    - run:
        name: PyTest with linters
        command: PATH="venv/bin:$PATH" script/entrypoint
    - save_cache:
        paths:
        - venv/
        key: python-packages-v1-{{ .Branch }}-{{ checksum "requirements.txt" }}-{{ checksum "constraints.txt" }}
  verify-generated-sql:
    docker:
      - image: circleci/python:3.7
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Verify that all of generated SQL is committed
          command: |
            sudo apt-get update
            python3.7 -m venv venv/
            venv/bin/pip install --upgrade -r requirements.txt
            rm -rf sql/
            venv/bin/python script/generate_sql
            echo "Inconsistencies between templates and generated SQL:"
            git ls-files --other --modified -x sql/*
            test `git ls-files --other --modified -x sql/* | wc -l` = 0
  dry-run-sql:
    docker:
      - image: python:3.7
    steps:
      - checkout
      - run:
          name: Verify that BigQuery validates each query
          command: script/dryrun
  deploy:
    parameters:
      image:
        type: string
    docker:
      # bash required for step: Determine docker image name
    - image: relud/docker-bash
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: Determine docker image name
        command: echo 'IMAGE="${CIRCLE_PROJECT_USERNAME+$CIRCLE_PROJECT_USERNAME/}${CIRCLE_PROJECT_REPONAME:-bigquery-etl}:${CIRCLE_TAG:-latest}"' > $BASH_ENV
    - run:
        name: Build docker image
        command: docker build . --pull --tag "$IMAGE"
    - run:
        name: Deploy to Dockerhub
        command: |
          echo "${DOCKER_PASS:?}" | docker login -u "${DOCKER_USER:?}" --password-stdin
          docker push "$IMAGE"

workflows:
  version: 2
  build:
    jobs:
    - build:
        context: data-eng-circleci-tests
    - verify-generated-sql
    - dry-run-sql
    - deploy:
        requires:
        # can't run in parallel because CIRCLE_BUILD_NUM is same
        - build
        - verify-generated-sql
        filters:
          branches:
            only: master
          tags:
            only: /.*/
