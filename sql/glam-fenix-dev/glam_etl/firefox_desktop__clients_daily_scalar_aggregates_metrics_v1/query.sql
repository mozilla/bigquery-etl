-- Query generated by: python3 -m bigquery_etl.glam.clients_daily_scalar_aggregates --source-table firefox_desktop_stable.metrics_v1
WITH extracted AS (
  SELECT
    *,
    DATE(submission_timestamp) AS submission_date,
    client_info.client_id,
    "metrics" AS ping_type,
    COALESCE(
      SAFE_CAST(SPLIT(client_info.app_display_version, '.')[OFFSET(0)] AS INT64),
      0
    ) AS app_version,
    client_info.os AS os,
    client_info.app_build AS app_build_id,
    client_info.app_channel AS channel
  FROM
    `moz-fx-data-shared-prod.firefox_desktop_stable.metrics_v1`
  WHERE
    DATE(submission_timestamp) = @submission_date
    AND client_info.client_id IS NOT NULL
),
unlabeled_metrics AS (
  SELECT
    client_id,
    ping_type,
    submission_date,
    os,
    app_version,
    app_build_id,
    channel,
    ARRAY<STRUCT<metric STRING, metric_type STRING, key STRING, agg_type STRING, value FLOAT64>>[
      (
        'browser_ui_proton_enabled',
        'boolean',
        '',
        'false',
        SUM(CAST(NOT metrics.boolean.browser_ui_proton_enabled AS INT64))
      ),
      (
        'browser_ui_proton_enabled',
        'boolean',
        '',
        'true',
        SUM(CAST(metrics.boolean.browser_ui_proton_enabled AS INT64))
      ),
      (
        'fog_failed_idle_registration',
        'boolean',
        '',
        'false',
        SUM(CAST(NOT metrics.boolean.fog_failed_idle_registration AS INT64))
      ),
      (
        'fog_failed_idle_registration',
        'boolean',
        '',
        'true',
        SUM(CAST(metrics.boolean.fog_failed_idle_registration AS INT64))
      ),
      (
        'fog_initialization',
        'timespan',
        '',
        'avg',
        AVG(CAST(metrics.timespan.fog_initialization.value AS INT64))
      ),
      (
        'fog_initialization',
        'timespan',
        '',
        'count',
        IF(MIN(metrics.timespan.fog_initialization.value) IS NULL, NULL, COUNT(*))
      ),
      (
        'fog_initialization',
        'timespan',
        '',
        'max',
        MAX(CAST(metrics.timespan.fog_initialization.value AS INT64))
      ),
      (
        'fog_initialization',
        'timespan',
        '',
        'min',
        MIN(CAST(metrics.timespan.fog_initialization.value AS INT64))
      ),
      (
        'fog_initialization',
        'timespan',
        '',
        'sum',
        SUM(CAST(metrics.timespan.fog_initialization.value AS INT64))
      ),
      (
        'fog_ipc_replay_failures',
        'counter',
        '',
        'avg',
        AVG(CAST(metrics.counter.fog_ipc_replay_failures AS INT64))
      ),
      (
        'fog_ipc_replay_failures',
        'counter',
        '',
        'count',
        IF(MIN(metrics.counter.fog_ipc_replay_failures) IS NULL, NULL, COUNT(*))
      ),
      (
        'fog_ipc_replay_failures',
        'counter',
        '',
        'max',
        MAX(CAST(metrics.counter.fog_ipc_replay_failures AS INT64))
      ),
      (
        'fog_ipc_replay_failures',
        'counter',
        '',
        'min',
        MIN(CAST(metrics.counter.fog_ipc_replay_failures AS INT64))
      ),
      (
        'fog_ipc_replay_failures',
        'counter',
        '',
        'sum',
        SUM(CAST(metrics.counter.fog_ipc_replay_failures AS INT64))
      ),
      (
        'glean_core_migration_successful',
        'boolean',
        '',
        'false',
        SUM(CAST(NOT metrics.boolean.glean_core_migration_successful AS INT64))
      ),
      (
        'glean_core_migration_successful',
        'boolean',
        '',
        'true',
        SUM(CAST(metrics.boolean.glean_core_migration_successful AS INT64))
      ),
      ('glean_error_io', 'counter', '', 'avg', AVG(CAST(metrics.counter.glean_error_io AS INT64))),
      (
        'glean_error_io',
        'counter',
        '',
        'count',
        IF(MIN(metrics.counter.glean_error_io) IS NULL, NULL, COUNT(*))
      ),
      ('glean_error_io', 'counter', '', 'max', MAX(CAST(metrics.counter.glean_error_io AS INT64))),
      ('glean_error_io', 'counter', '', 'min', MIN(CAST(metrics.counter.glean_error_io AS INT64))),
      ('glean_error_io', 'counter', '', 'sum', SUM(CAST(metrics.counter.glean_error_io AS INT64))),
      (
        'glean_error_preinit_tasks_overflow',
        'counter',
        '',
        'avg',
        AVG(CAST(metrics.counter.glean_error_preinit_tasks_overflow AS INT64))
      ),
      (
        'glean_error_preinit_tasks_overflow',
        'counter',
        '',
        'count',
        IF(MIN(metrics.counter.glean_error_preinit_tasks_overflow) IS NULL, NULL, COUNT(*))
      ),
      (
        'glean_error_preinit_tasks_overflow',
        'counter',
        '',
        'max',
        MAX(CAST(metrics.counter.glean_error_preinit_tasks_overflow AS INT64))
      ),
      (
        'glean_error_preinit_tasks_overflow',
        'counter',
        '',
        'min',
        MIN(CAST(metrics.counter.glean_error_preinit_tasks_overflow AS INT64))
      ),
      (
        'glean_error_preinit_tasks_overflow',
        'counter',
        '',
        'sum',
        SUM(CAST(metrics.counter.glean_error_preinit_tasks_overflow AS INT64))
      ),
      (
        'glean_error_preinit_tasks_timeout',
        'boolean',
        '',
        'false',
        SUM(CAST(NOT metrics.boolean.glean_error_preinit_tasks_timeout AS INT64))
      ),
      (
        'glean_error_preinit_tasks_timeout',
        'boolean',
        '',
        'true',
        SUM(CAST(metrics.boolean.glean_error_preinit_tasks_timeout AS INT64))
      ),
      (
        'glean_time_invalid_timezone_offset',
        'counter',
        '',
        'avg',
        AVG(CAST(metrics.counter.glean_time_invalid_timezone_offset AS INT64))
      ),
      (
        'glean_time_invalid_timezone_offset',
        'counter',
        '',
        'count',
        IF(MIN(metrics.counter.glean_time_invalid_timezone_offset) IS NULL, NULL, COUNT(*))
      ),
      (
        'glean_time_invalid_timezone_offset',
        'counter',
        '',
        'max',
        MAX(CAST(metrics.counter.glean_time_invalid_timezone_offset AS INT64))
      ),
      (
        'glean_time_invalid_timezone_offset',
        'counter',
        '',
        'min',
        MIN(CAST(metrics.counter.glean_time_invalid_timezone_offset AS INT64))
      ),
      (
        'glean_time_invalid_timezone_offset',
        'counter',
        '',
        'sum',
        SUM(CAST(metrics.counter.glean_time_invalid_timezone_offset AS INT64))
      ),
      (
        'glean_upload_deleted_pings_after_quota_hit',
        'counter',
        '',
        'avg',
        AVG(CAST(metrics.counter.glean_upload_deleted_pings_after_quota_hit AS INT64))
      ),
      (
        'glean_upload_deleted_pings_after_quota_hit',
        'counter',
        '',
        'count',
        IF(MIN(metrics.counter.glean_upload_deleted_pings_after_quota_hit) IS NULL, NULL, COUNT(*))
      ),
      (
        'glean_upload_deleted_pings_after_quota_hit',
        'counter',
        '',
        'max',
        MAX(CAST(metrics.counter.glean_upload_deleted_pings_after_quota_hit AS INT64))
      ),
      (
        'glean_upload_deleted_pings_after_quota_hit',
        'counter',
        '',
        'min',
        MIN(CAST(metrics.counter.glean_upload_deleted_pings_after_quota_hit AS INT64))
      ),
      (
        'glean_upload_deleted_pings_after_quota_hit',
        'counter',
        '',
        'sum',
        SUM(CAST(metrics.counter.glean_upload_deleted_pings_after_quota_hit AS INT64))
      ),
      (
        'glean_upload_pending_pings',
        'counter',
        '',
        'avg',
        AVG(CAST(metrics.counter.glean_upload_pending_pings AS INT64))
      ),
      (
        'glean_upload_pending_pings',
        'counter',
        '',
        'count',
        IF(MIN(metrics.counter.glean_upload_pending_pings) IS NULL, NULL, COUNT(*))
      ),
      (
        'glean_upload_pending_pings',
        'counter',
        '',
        'max',
        MAX(CAST(metrics.counter.glean_upload_pending_pings AS INT64))
      ),
      (
        'glean_upload_pending_pings',
        'counter',
        '',
        'min',
        MIN(CAST(metrics.counter.glean_upload_pending_pings AS INT64))
      ),
      (
        'glean_upload_pending_pings',
        'counter',
        '',
        'sum',
        SUM(CAST(metrics.counter.glean_upload_pending_pings AS INT64))
      ),
      (
        'glean_validation_app_forceclosed_count',
        'counter',
        '',
        'avg',
        AVG(CAST(metrics.counter.glean_validation_app_forceclosed_count AS INT64))
      ),
      (
        'glean_validation_app_forceclosed_count',
        'counter',
        '',
        'count',
        IF(MIN(metrics.counter.glean_validation_app_forceclosed_count) IS NULL, NULL, COUNT(*))
      ),
      (
        'glean_validation_app_forceclosed_count',
        'counter',
        '',
        'max',
        MAX(CAST(metrics.counter.glean_validation_app_forceclosed_count AS INT64))
      ),
      (
        'glean_validation_app_forceclosed_count',
        'counter',
        '',
        'min',
        MIN(CAST(metrics.counter.glean_validation_app_forceclosed_count AS INT64))
      ),
      (
        'glean_validation_app_forceclosed_count',
        'counter',
        '',
        'sum',
        SUM(CAST(metrics.counter.glean_validation_app_forceclosed_count AS INT64))
      ),
      (
        'glean_validation_baseline_ping_count',
        'counter',
        '',
        'avg',
        AVG(CAST(metrics.counter.glean_validation_baseline_ping_count AS INT64))
      ),
      (
        'glean_validation_baseline_ping_count',
        'counter',
        '',
        'count',
        IF(MIN(metrics.counter.glean_validation_baseline_ping_count) IS NULL, NULL, COUNT(*))
      ),
      (
        'glean_validation_baseline_ping_count',
        'counter',
        '',
        'max',
        MAX(CAST(metrics.counter.glean_validation_baseline_ping_count AS INT64))
      ),
      (
        'glean_validation_baseline_ping_count',
        'counter',
        '',
        'min',
        MIN(CAST(metrics.counter.glean_validation_baseline_ping_count AS INT64))
      ),
      (
        'glean_validation_baseline_ping_count',
        'counter',
        '',
        'sum',
        SUM(CAST(metrics.counter.glean_validation_baseline_ping_count AS INT64))
      ),
      (
        'glean_validation_foreground_count',
        'counter',
        '',
        'avg',
        AVG(CAST(metrics.counter.glean_validation_foreground_count AS INT64))
      ),
      (
        'glean_validation_foreground_count',
        'counter',
        '',
        'count',
        IF(MIN(metrics.counter.glean_validation_foreground_count) IS NULL, NULL, COUNT(*))
      ),
      (
        'glean_validation_foreground_count',
        'counter',
        '',
        'max',
        MAX(CAST(metrics.counter.glean_validation_foreground_count AS INT64))
      ),
      (
        'glean_validation_foreground_count',
        'counter',
        '',
        'min',
        MIN(CAST(metrics.counter.glean_validation_foreground_count AS INT64))
      ),
      (
        'glean_validation_foreground_count',
        'counter',
        '',
        'sum',
        SUM(CAST(metrics.counter.glean_validation_foreground_count AS INT64))
      ),
      (
        'power_total_cpu_time_ms',
        'counter',
        '',
        'avg',
        AVG(CAST(metrics.counter.power_total_cpu_time_ms AS INT64))
      ),
      (
        'power_total_cpu_time_ms',
        'counter',
        '',
        'count',
        IF(MIN(metrics.counter.power_total_cpu_time_ms) IS NULL, NULL, COUNT(*))
      ),
      (
        'power_total_cpu_time_ms',
        'counter',
        '',
        'max',
        MAX(CAST(metrics.counter.power_total_cpu_time_ms AS INT64))
      ),
      (
        'power_total_cpu_time_ms',
        'counter',
        '',
        'min',
        MIN(CAST(metrics.counter.power_total_cpu_time_ms AS INT64))
      ),
      (
        'power_total_cpu_time_ms',
        'counter',
        '',
        'sum',
        SUM(CAST(metrics.counter.power_total_cpu_time_ms AS INT64))
      )
    ] AS scalar_aggregates
  FROM
    extracted
  GROUP BY
    client_id,
    ping_type,
    submission_date,
    os,
    app_version,
    app_build_id,
    channel
),
grouped_labeled_metrics AS (
  SELECT
    client_id,
    ping_type,
    submission_date,
    os,
    app_version,
    app_build_id,
    channel,
    ARRAY<STRUCT<name STRING, type STRING, value ARRAY<STRUCT<key STRING, value INT64>>>>[
      (
        'glean_error_invalid_label',
        'labeled_counter',
        metrics.labeled_counter.glean_error_invalid_label
      ),
      (
        'glean_error_invalid_overflow',
        'labeled_counter',
        metrics.labeled_counter.glean_error_invalid_overflow
      ),
      (
        'glean_error_invalid_state',
        'labeled_counter',
        metrics.labeled_counter.glean_error_invalid_state
      ),
      (
        'glean_error_invalid_value',
        'labeled_counter',
        metrics.labeled_counter.glean_error_invalid_value
      ),
      (
        'glean_upload_ping_upload_failure',
        'labeled_counter',
        metrics.labeled_counter.glean_upload_ping_upload_failure
      ),
      (
        'glean_validation_pings_submitted',
        'labeled_counter',
        metrics.labeled_counter.glean_validation_pings_submitted
      )
    ] AS metrics
  FROM
    extracted
),
flattened_labeled_metrics AS (
  SELECT
    client_id,
    ping_type,
    submission_date,
    os,
    app_version,
    app_build_id,
    channel,
    metrics.name AS metric,
    metrics.type AS metric_type,
    value.key AS key,
    value.value AS value
  FROM
    grouped_labeled_metrics
  CROSS JOIN
    UNNEST(metrics) AS metrics,
    UNNEST(metrics.value) AS value
),
aggregated_labeled_metrics AS (
  SELECT
    client_id,
    ping_type,
    submission_date,
    os,
    app_version,
    app_build_id,
    channel,
    metric,
    metric_type,
    key,
    MAX(value) AS max,
    MIN(value) AS min,
    AVG(value) AS avg,
    SUM(value) AS sum,
    IF(MIN(value) IS NULL, NULL, COUNT(*)) AS count
  FROM
    flattened_labeled_metrics
  GROUP BY
    client_id,
    ping_type,
    submission_date,
    os,
    app_version,
    app_build_id,
    channel,
    metric,
    metric_type,
    key
),
labeled_metrics AS (
  SELECT
    client_id,
    ping_type,
    submission_date,
    os,
    app_version,
    app_build_id,
    channel,
    ARRAY_CONCAT_AGG(
      ARRAY<STRUCT<metric STRING, metric_type STRING, key STRING, agg_type STRING, value FLOAT64>>[
        (metric, metric_type, key, 'max', max),
        (metric, metric_type, key, 'min', min),
        (metric, metric_type, key, 'avg', avg),
        (metric, metric_type, key, 'sum', sum),
        (metric, metric_type, key, 'count', count)
      ]
    ) AS scalar_aggregates
  FROM
    aggregated_labeled_metrics
  GROUP BY
    client_id,
    ping_type,
    submission_date,
    os,
    app_version,
    app_build_id,
    channel
)
SELECT
  *
FROM
  unlabeled_metrics
UNION ALL
SELECT
  *
FROM
  labeled_metrics
