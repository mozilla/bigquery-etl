r"""Metric counting.

```bash
python3 -m bigquery_etl.glam.glean_metric_bucketing
```
"""
from jinja2 import Environment, PackageLoader

from bigquery_etl.format_sql.formatter import reformat


def render_query(**kwargs) -> str:
    """Render the main query."""
    env = Environment(loader=PackageLoader("bigquery_etl", "glam/templates"))
    sql = env.get_template("metric_bucketing_v1.sql")
    return reformat(sql.render(**kwargs))


def telemetry_variables():
    """Variables for metric_bucketing."""
    attributes_list = ["os", "app_version", "app_build_id", "channel"]
    return dict(
        source_table="clients_scalar_aggregates_v1",
        attributes=",".join(attributes_list),
        aggregate_attributes="""
            metric,
            metric_type,
            key,
            process
        """,
        aggregate_attributes_type="""
            metric STRING,
            metric_type STRING,
            key STRING,
            process STRING
        """,
        aggregate_grouping="""
            client_agg_type,
            first_bucket,
            last_bucket,
            num_buckets
        """,
    )


print(render_query(header="-- generated by:", **telemetry_variables()))
