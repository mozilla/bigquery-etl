-- Query generated by:
-- templates/clients_daily_scalar_aggregates.sql.py --agg-type keyed_booleans
WITH filtered AS (
    SELECT
        *,
        SPLIT(application.version, '.')[OFFSET(0)] AS app_version,
        DATE(submission_timestamp) as submission_date,
        normalized_os as os,
        application.build_id AS app_build_id,
        normalized_channel AS channel
    FROM `moz-fx-data-shared-prod.telemetry_stable.main_v4`
    WHERE DATE(submission_timestamp) = @submission_date
      AND normalized_channel in (
        "release", "beta", "nightly"
      )
      AND client_id IS NOT NULL),

grouped_metrics AS
  (SELECT
    client_id,
    submission_date,
    os,
    app_version,
    app_build_id,
    channel,
    ARRAY<STRUCT<
        name STRING,
        value ARRAY<STRUCT<key STRING, value BOOLEAN>>
    >>[
      ('services_sync_sync_login_state_transitions', payload.processes.parent.keyed_scalars.services_sync_sync_login_state_transitions),
      ('a11y_theme', payload.processes.parent.keyed_scalars.a11y_theme),
      ('devtools_tool_registered', payload.processes.parent.keyed_scalars.devtools_tool_registered),
      ('widget_ime_name_on_linux', payload.processes.parent.keyed_scalars.widget_ime_name_on_linux),
      ('widget_ime_name_on_mac', payload.processes.parent.keyed_scalars.widget_ime_name_on_mac),
      ('widget_ime_name_on_windows', payload.processes.parent.keyed_scalars.widget_ime_name_on_windows),
      ('security_pkcs11_modules_loaded', payload.processes.parent.keyed_scalars.security_pkcs11_modules_loaded),
      ('sandbox_no_job', payload.processes.parent.keyed_scalars.sandbox_no_job)
    ] as metrics
  FROM filtered),

flattened_metrics AS
  (SELECT
    client_id,
    submission_date,
    os,
    app_version,
    app_build_id,
    channel,
    metrics.name AS metric,
    value.key AS key,
    value.value AS value
  FROM grouped_metrics
  CROSS JOIN UNNEST(metrics) AS metrics,
  UNNEST(metrics.value) AS value),

-- Using `min` for when `agg_type` is `count` returns null when all rows are null
aggregated AS (
  SELECT
      submission_date,
      client_id,
      os,
      app_version,
      app_build_id,
      channel,
      metric,
      key,
      SUM(CASE WHEN value = True THEN 1 ELSE 0 END) AS true_col,
      SUM(CASE WHEN value = False THEN 1 ELSE 0 END) AS false_col
  FROM flattened_metrics
  GROUP BY
      submission_date,
      client_id,
      os,
      app_version,
      app_build_id,
      channel,
      metric,
      key)

SELECT
  client_id,
  submission_date,
  os,
  app_version,
  app_build_id,
  channel,
  ARRAY_CONCAT_AGG(ARRAY<STRUCT<
        metric STRING,
        metric_type STRING,
        key STRING,
        agg_type STRING,
        value FLOAT64
    >>
    [
        (metric, 'keyed-scalar-boolean', key, 'true', true_col),
        (metric, 'keyed-scalar-boolean', key, 'false', false_col)
    ]
  ) AS scalar_aggregates
FROM aggregated
GROUP BY
  client_id,
  submission_date,
  os,
  app_version,
  app_build_id,
  channel
