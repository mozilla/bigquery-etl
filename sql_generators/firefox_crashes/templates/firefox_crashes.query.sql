-- Generated by bqetl generate firefox_crashes
WITH
  -- get past minidump hashes to remove duplicates from current day
  -- keep all empty and null minidumps
  {% for table_name, fields in tables.items() %}
    past_minidumps_{{ table_name.split('.')[1] }} AS (
      SELECT
        DISTINCT(metrics.string.crash_minidump_sha256_hash) AS minidump_hash
      FROM
       `{{ table_name }}`
      WHERE
        DATE(submission_timestamp) BETWEEN DATE_SUB(@submission_date, INTERVAL 365 DAY) AND DATE_SUB(@submission_date, INTERVAL 1 DAY)
        -- hash of empty dump
        AND metrics.string.crash_minidump_sha256_hash != 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'
        AND metrics.string.crash_minidump_sha256_hash IS NOT NULL
    )
    {% if not loop.last %}
      ,
    {% endif %}
  {% endfor %}
{% for table_name, fields in tables.items() %}
  SELECT
    {{ fields }},
  FROM
   `{{ table_name }}`
  LEFT JOIN
    past_minidumps_{{ table_name.split('.')[1] }}
  ON
    minidump_hash = metrics.string.crash_minidump_sha256_hash
  WHERE
    DATE(submission_timestamp) = @submission_date
    AND minidump_hash IS NULL
  -- dedupe current day
  QUALIFY
    metrics.string.crash_minidump_sha256_hash = 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'
    OR metrics.string.crash_minidump_sha256_hash IS NULL
    OR ROW_NUMBER() OVER(
      PARTITION BY metrics.string.crash_minidump_sha256_hash
      ORDER BY submission_timestamp
    ) = 1
  {% if not loop.last %}
    UNION ALL
  {% endif %}
{% endfor %}
