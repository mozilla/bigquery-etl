# Generated via https://github.com/mozilla/bigquery-etl/blob/main/bigquery_etl/query_scheduling/generate_airflow_dags.py

from airflow import DAG
from airflow.sensors.external_task import ExternalTaskMarker
from airflow.sensors.external_task import ExternalTaskSensor
from airflow.utils.task_group import TaskGroup
import datetime
from operators.gcp_container_operator import GKEPodOperator
from utils.constants import ALLOWED_STATES, FAILED_STATES
from utils.gcp import bigquery_etl_query, bigquery_dq_check

docs = """
### bqetl_external_test_dag

Built from bigquery-etl repo, [`dags/bqetl_external_test_dag.py`](https://github.com/mozilla/bigquery-etl/blob/generated-sql/dags/bqetl_external_test_dag.py)

#### Owner

test@example.org

#### Tags

* repo/bigquery-etl
"""


default_args = {
    "owner": "test@example.org",
    "start_date": datetime.datetime(2020, 5, 25, 0, 0),
    "end_date": None,
    "email": [],
    "depends_on_past": False,
    "retry_delay": datetime.timedelta(seconds=1800),
    "email_on_failure": True,
    "email_on_retry": True,
    "retries": 2,
}

tags = ["repo/bigquery-etl"]

with DAG(
    "bqetl_external_test_dag",
    default_args=default_args,
    schedule_interval="@daily",
    doc_md=docs,
    tags=tags,
) as dag:

    test__external_table__v1 = bigquery_etl_query(
        task_id="test__external_table__v1",
        destination_table="external_table_v1",
        dataset_id="test",
        project_id="test-project",
        owner="test@example.org",
        email=["test@example.org"],
        date_partition_parameter="submission_date",
        depends_on_past=False,
    )

    with TaskGroup(
        "test__external_table__v1_external",
    ) as test__external_table__v1_external:
        ExternalTaskMarker(
            task_id="bqetl_test_dag__wait_for_test__external_table__v1",
            external_dag_id="bqetl_test_dag",
            external_task_id="wait_for_test__external_table__v1",
        )

        test__external_table__v1_external.set_upstream(test__external_table__v1)
