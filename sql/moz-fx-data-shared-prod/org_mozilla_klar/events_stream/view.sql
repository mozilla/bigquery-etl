-- Generated via bigquery_etl.glean_usage
CREATE OR REPLACE VIEW
  `moz-fx-data-shared-prod.org_mozilla_klar.events_stream`
AS
SELECT
  *,
  STRUCT(
    STRUCT(
      LAX_BOOL(event_extra.after_reset) AS `after_reset`,
      LAX_BOOL(event_extra.alt_text_modal) AS `alt_text_modal`,
      LAX_BOOL(event_extra.auto_show) AS `auto_show`,
      LAX_BOOL(event_extra.auto_translate) AS `auto_translate`,
      LAX_BOOL(event_extra.blocked) AS `blocked`,
      LAX_BOOL(event_extra.breached) AS `breached`,
      LAX_BOOL(event_extra.cache) AS `cache`,
      LAX_BOOL(event_extra.cancelled) AS `cancelled`,
      LAX_BOOL(event_extra.confident) AS `confident`,
      LAX_BOOL(event_extra.cookies_and_storage) AS `cookies_and_storage`,
      LAX_BOOL(event_extra.description_changed) AS `description_changed`,
      LAX_BOOL(event_extra.did_edit_pw) AS `did_edit_pw`,
      LAX_BOOL(event_extra.did_edit_un) AS `did_edit_un`,
      LAX_BOOL(event_extra.did_select_pw) AS `did_select_pw`,
      LAX_BOOL(event_extra.did_select_un) AS `did_select_un`,
      LAX_BOOL(event_extra.filled) AS `filled`,
      LAX_BOOL(event_extra.first_interaction) AS `first_interaction`,
      LAX_BOOL(event_extra.form_data) AS `form_data`,
      LAX_BOOL(event_extra.had_errors) AS `had_errors`,
      LAX_BOOL(event_extra.has_been_saved) AS `has_been_saved`,
      LAX_BOOL(event_extra.has_click_rule) AS `has_click_rule`,
      LAX_BOOL(event_extra.has_cookie_rule) AS `has_cookie_rule`,
      LAX_BOOL(event_extra.has_description) AS `has_description`,
      LAX_BOOL(event_extra.has_edited_title) AS `has_edited_title`,
      LAX_BOOL(event_extra.has_rtcp_mux) AS `has_rtcp_mux`,
      LAX_BOOL(event_extra.has_sts) AS `has_sts`,
      LAX_BOOL(event_extra.hidden) AS `hidden`,
      LAX_BOOL(event_extra.history_and_downloads) AS `history_and_downloads`,
      LAX_BOOL(event_extra.history_form_data_downloads) AS `history_form_data_downloads`,
      LAX_BOOL(event_extra.hit) AS `hit`,
      LAX_BOOL(event_extra.hls_decoder) AS `hls_decoder`,
      LAX_BOOL(event_extra.hyphen_compat) AS `hyphen_compat`,
      LAX_BOOL(event_extra.is_default) AS `is_default`,
      LAX_BOOL(event_extra.is_enabled) AS `is_enabled`,
      LAX_BOOL(event_extra.is_frame) AS `is_frame`,
      LAX_BOOL(event_extra.is_hardware_accelerated) AS `is_hardware_accelerated`,
      LAX_BOOL(event_extra.is_hardware_decoding) AS `is_hardware_decoding`,
      LAX_BOOL(event_extra.is_hdr) AS `is_hdr`,
      LAX_BOOL(event_extra.is_lang_attribute_valid) AS `is_lang_attribute_valid`,
      LAX_BOOL(event_extra.is_remote_ice_lite) AS `is_remote_ice_lite`,
      LAX_BOOL(event_extra.is_search) AS `is_search`,
      LAX_BOOL(event_extra.is_valid_section) AS `is_valid_section`,
      LAX_BOOL(event_extra.isBlock) AS `isBlock`,
      LAX_BOOL(event_extra.isDecryptSuccess) AS `isDecryptSuccess`,
      LAX_BOOL(event_extra.issued_by_cca) AS `issued_by_cca`,
      LAX_BOOL(event_extra.lang_tags_match) AS `lang_tags_match`,
      LAX_BOOL(event_extra.no_rule) AS `no_rule`,
      LAX_BOOL(event_extra.open_successful) AS `open_successful`,
      LAX_BOOL(event_extra.package_name) AS `package_name`,
      LAX_BOOL(event_extra.poisoned) AS `poisoned`,
      LAX_BOOL(event_extra.reset_disabled) AS `reset_disabled`,
      LAX_BOOL(event_extra.save_successful) AS `save_successful`,
      LAX_BOOL(event_extra.saved) AS `saved`,
      LAX_BOOL(event_extra.site_settings) AS `site_settings`,
      LAX_BOOL(event_extra.smartblockEmbedTogglesShown) AS `smartblockEmbedTogglesShown`,
      LAX_BOOL(event_extra.smartblockToggleClicked) AS `smartblockToggleClicked`,
      LAX_BOOL(event_extra.status) AS `status`,
      LAX_BOOL(event_extra.submit_report) AS `submit_report`,
      LAX_BOOL(event_extra.success) AS `success`,
      LAX_BOOL(event_extra.sync) AS `sync`,
      LAX_BOOL(event_extra.toggle_state) AS `toggle_state`,
      LAX_BOOL(event_extra.toggled_on) AS `toggled_on`,
      LAX_BOOL(event_extra.triggered_externally) AS `triggered_externally`,
      LAX_BOOL(event_extra.vulnerable) AS `vulnerable`
    ) AS `boolean`,
    STRUCT(
      LAX_INT64(event_extra.attemptCount) AS `attemptCount`,
      LAX_INT64(event_extra.average_words_per_request) AS `average_words_per_request`,
      LAX_INT64(event_extra.average_words_per_second) AS `average_words_per_second`,
      LAX_INT64(event_extra.bounce_time) AS `bounce_time`,
      LAX_INT64(event_extra.buffering_time) AS `buffering_time`,
      LAX_INT64(event_extra.cc_number_multi_parts) AS `cc_number_multi_parts`,
      LAX_INT64(event_extra.channel_status) AS `channel_status`,
      LAX_INT64(event_extra.columnnumber) AS `columnnumber`,
      LAX_INT64(event_extra.comments_count) AS `comments_count`,
      LAX_INT64(event_extra.cores) AS `cores`,
      LAX_INT64(event_extra.cpu_milliseconds) AS `cpu_milliseconds`,
      LAX_INT64(event_extra.cpu_utilization) AS `cpu_utilization`,
      LAX_INT64(event_extra.current_engines_count) AS `current_engines_count`,
      LAX_INT64(event_extra.current_item) AS `current_item`,
      LAX_INT64(event_extra.deleted) AS `deleted`,
      LAX_INT64(event_extra.download_time) AS `download_time`,
      LAX_INT64(event_extra.duration) AS `duration`,
      LAX_INT64(event_extra.duration_ms) AS `duration_ms`,
      LAX_INT64(event_extra.edited) AS `edited`,
      LAX_INT64(event_extra.engine_count) AS `engine_count`,
      LAX_INT64(event_extra.error_code) AS `error_code`,
      LAX_INT64(event_extra.extracted_code_units) AS `extracted_code_units`,
      LAX_INT64(event_extra.extraction_time) AS `extraction_time`,
      LAX_INT64(event_extra.first_frame_loaded_time) AS `first_frame_loaded_time`,
      LAX_INT64(event_extra.has_alt_text) AS `has_alt_text`,
      LAX_INT64(event_extra.has_no_alt_text) AS `has_no_alt_text`,
      LAX_INT64(event_extra.identification_time) AS `identification_time`,
      LAX_INT64(event_extra.iframe_count) AS `iframe_count`,
      LAX_INT64(event_extra.items_count) AS `items_count`,
      LAX_INT64(event_extra.items_over_quota) AS `items_over_quota`,
      LAX_INT64(event_extra.last_install) AS `last_install`,
      LAX_INT64(event_extra.last_line_len) AS `last_line_len`,
      LAX_INT64(event_extra.last_used) AS `last_used`,
      LAX_INT64(event_extra.length) AS `length`,
      LAX_INT64(event_extra.linenumber) AS `linenumber`,
      LAX_INT64(event_extra.list_size) AS `list_size`,
      LAX_INT64(event_extra.memory_bytes) AS `memory_bytes`,
      LAX_INT64(event_extra.metadata_loaded_time) AS `metadata_loaded_time`,
      LAX_INT64(event_extra.mode) AS `mode`,
      LAX_INT64(event_extra.models) AS `models`,
      LAX_INT64(event_extra.n_tab_deselect) AS `n_tab_deselect`,
      LAX_INT64(event_extra.negotiation_count) AS `negotiation_count`,
      LAX_INT64(event_extra.num_msections_audio_recvonly) AS `num_msections_audio_recvonly`,
      LAX_INT64(event_extra.num_msections_audio_sendonly) AS `num_msections_audio_sendonly`,
      LAX_INT64(event_extra.num_msections_audio_sendrecv) AS `num_msections_audio_sendrecv`,
      LAX_INT64(event_extra.num_msections_data) AS `num_msections_data`,
      LAX_INT64(event_extra.num_msections_video_recvonly) AS `num_msections_video_recvonly`,
      LAX_INT64(event_extra.num_msections_video_sendonly) AS `num_msections_video_sendonly`,
      LAX_INT64(event_extra.num_msections_video_sendrecv) AS `num_msections_video_sendrecv`,
      LAX_INT64(event_extra.num_send_simulcast_layers) AS `num_send_simulcast_layers`,
      LAX_INT64(event_extra.num_strings) AS `num_strings`,
      LAX_INT64(event_extra.num_transports) AS `num_transports`,
      LAX_INT64(event_extra.number_of_logins_migrated) AS `number_of_logins_migrated`,
      LAX_INT64(event_extra.number_of_logins_to_migrate) AS `number_of_logins_to_migrate`,
      LAX_INT64(event_extra.opened_tabs) AS `opened_tabs`,
      LAX_INT64(event_extra.pc_negotiation_count) AS `pc_negotiation_count`,
      LAX_INT64(event_extra.played_time) AS `played_time`,
      LAX_INT64(event_extra.saved_count) AS `saved_count`,
      LAX_INT64(event_extra.seq) AS `seq`,
      LAX_INT64(event_extra.size) AS `size`,
      LAX_INT64(event_extra.source_line) AS `source_line`,
      LAX_INT64(event_extra.source_text_code_units) AS `source_text_code_units`,
      LAX_INT64(event_extra.source_text_word_count) AS `source_text_word_count`,
      LAX_INT64(event_extra.time) AS `time`,
      LAX_INT64(event_extra.total_completed_requests) AS `total_completed_requests`,
      LAX_INT64(event_extra.total_inference_seconds) AS `total_inference_seconds`,
      LAX_INT64(event_extra.total_size_bytes) AS `total_size_bytes`,
      LAX_INT64(event_extra.total_time) AS `total_time`,
      LAX_INT64(event_extra.total_translated_words) AS `total_translated_words`,
      LAX_INT64(event_extra.total_waiting_data_time) AS `total_waiting_data_time`,
      LAX_INT64(event_extra.total_words) AS `total_words`,
      LAX_INT64(event_extra.value) AS `value`,
      LAX_INT64(event_extra.wait_count) AS `wait_count`,
      LAX_INT64(event_extra.wall_milliseconds) AS `wall_milliseconds`,
      LAX_INT64(event_extra.when) AS `when`,
      LAX_INT64(event_extra.words_added) AS `words_added`,
      LAX_INT64(event_extra.words_removed) AS `words_removed`
    ) AS `quantity`,
    STRUCT(
      JSON_VALUE(event_extra.acFieldName) AS `acFieldName`,
      JSON_VALUE(event_extra.action) AS `action`,
      JSON_VALUE(event_extra.action_performed) AS `action_performed`,
      JSON_VALUE(event_extra.action_uuid) AS `action_uuid`,
      JSON_VALUE(event_extra.active) AS `active`,
      JSON_VALUE(event_extra.additional_name) AS `additional_name`,
      JSON_VALUE(event_extra.addon_id) AS `addon_id`,
      JSON_VALUE(event_extra.addon_type) AS `addon_type`,
      JSON_VALUE(event_extra.addon_version) AS `addon_version`,
      JSON_VALUE(event_extra.addonId) AS `addonId`,
      JSON_VALUE(event_extra.addonVersion) AS `addonVersion`,
      JSON_VALUE(event_extra.address_level1) AS `address_level1`,
      JSON_VALUE(event_extra.address_level2) AS `address_level2`,
      JSON_VALUE(event_extra.address_line1) AS `address_line1`,
      JSON_VALUE(event_extra.address_line2) AS `address_line2`,
      JSON_VALUE(event_extra.address_line3) AS `address_line3`,
      JSON_VALUE(event_extra.age) AS `age`,
      JSON_VALUE(event_extra.alt_text_type) AS `alt_text_type`,
      JSON_VALUE(event_extra.auto_admin) AS `auto_admin`,
      JSON_VALUE(event_extra.backend) AS `backend`,
      JSON_VALUE(event_extra.blockeduridetails) AS `blockeduridetails`,
      JSON_VALUE(event_extra.blockeduritype) AS `blockeduritype`,
      JSON_VALUE(event_extra.blocklist_state) AS `blocklist_state`,
      JSON_VALUE(event_extra.branch) AS `branch`,
      JSON_VALUE(event_extra.branches) AS `branches`,
      JSON_VALUE(event_extra.bundle_policy) AS `bundle_policy`,
      JSON_VALUE(event_extra.caller) AS `caller`,
      JSON_VALUE(event_extra.canaries) AS `canaries`,
      JSON_VALUE(event_extra.cancel_reason) AS `cancel_reason`,
      JSON_VALUE(event_extra.captivePortal) AS `captivePortal`,
      JSON_VALUE(event_extra.captiveState) AS `captiveState`,
      JSON_VALUE(event_extra.category) AS `category`,
      JSON_VALUE(event_extra.caught_exceptio) AS `caught_exceptio`,
      JSON_VALUE(event_extra.cc_exp) AS `cc_exp`,
      JSON_VALUE(event_extra.cc_exp_month) AS `cc_exp_month`,
      JSON_VALUE(event_extra.cc_exp_year) AS `cc_exp_year`,
      JSON_VALUE(event_extra.cc_name) AS `cc_name`,
      JSON_VALUE(event_extra.cc_number) AS `cc_number`,
      JSON_VALUE(event_extra.cc_type) AS `cc_type`,
      JSON_VALUE(event_extra.changedPref) AS `changedPref`,
      JSON_VALUE(event_extra.choice) AS `choice`,
      JSON_VALUE(event_extra.codecs) AS `codecs`,
      JSON_VALUE(event_extra.cold) AS `cold`,
      JSON_VALUE(event_extra.conflict_slug) AS `conflict_slug`,
      JSON_VALUE(event_extra.conflictingSlug) AS `conflictingSlug`,
      JSON_VALUE(event_extra.connection_id) AS `connection_id`,
      JSON_VALUE(event_extra.connection_type) AS `connection_type`,
      JSON_VALUE(event_extra.contenttype) AS `contenttype`,
      JSON_VALUE(event_extra.context) AS `context`,
      JSON_VALUE(event_extra.contextReason) AS `contextReason`,
      JSON_VALUE(event_extra.cookie_banner_setting) AS `cookie_banner_setting`,
      JSON_VALUE(event_extra.country) AS `country`,
      JSON_VALUE(event_extra.cross_origin) AS `cross_origin`,
      JSON_VALUE(event_extra.data_migrated) AS `data_migrated`,
      JSON_VALUE(event_extra.decoder_name) AS `decoder_name`,
      JSON_VALUE(event_extra.deletedBy) AS `deletedBy`,
      JSON_VALUE(event_extra.destroyed) AS `destroyed`,
      JSON_VALUE(event_extra.detail) AS `detail`,
      JSON_VALUE(event_extra.detected_language) AS `detected_language`,
      JSON_VALUE(event_extra.device_name) AS `device_name`,
      JSON_VALUE(event_extra.didResetValue) AS `didResetValue`,
      JSON_VALUE(event_extra.direction) AS `direction`,
      JSON_VALUE(event_extra.directive) AS `directive`,
      JSON_VALUE(event_extra.document_language) AS `document_language`,
      JSON_VALUE(event_extra.domain) AS `domain`,
      JSON_VALUE(event_extra.download_time) AS `download_time`,
      JSON_VALUE(event_extra.duration) AS `duration`,
      JSON_VALUE(event_extra.email) AS `email`,
      JSON_VALUE(event_extra.end_reason) AS `end_reason`,
      JSON_VALUE(event_extra.engine_id) AS `engine_id`,
      JSON_VALUE(event_extra.engine_name) AS `engine_name`,
      JSON_VALUE(event_extra.engine_type) AS `engine_type`,
      JSON_VALUE(event_extra.engineId) AS `engineId`,
      JSON_VALUE(event_extra.enrollment_id) AS `enrollment_id`,
      JSON_VALUE(event_extra.enrollmentId) AS `enrollmentId`,
      JSON_VALUE(event_extra.enterprise) AS `enterprise`,
      JSON_VALUE(event_extra.entry_point) AS `entry_point`,
      JSON_VALUE(event_extra.entrypoint) AS `entrypoint`,
      JSON_VALUE(event_extra.error) AS `error`,
      JSON_VALUE(event_extra.error_code) AS `error_code`,
      JSON_VALUE(event_extra.error_message) AS `error_message`,
      JSON_VALUE(event_extra.error_name) AS `error_name`,
      JSON_VALUE(event_extra.error_string) AS `error_string`,
      JSON_VALUE(event_extra.error_type) AS `error_type`,
      JSON_VALUE(event_extra.errorName) AS `errorName`,
      JSON_VALUE(event_extra.errorResult) AS `errorResult`,
      JSON_VALUE(event_extra.evaluateReason) AS `evaluateReason`,
      JSON_VALUE(event_extra.exceptions) AS `exceptions`,
      JSON_VALUE(event_extra.experiment) AS `experiment`,
      JSON_VALUE(event_extra.experiment_type) AS `experiment_type`,
      JSON_VALUE(event_extra.experimentType) AS `experimentType`,
      JSON_VALUE(event_extra.extension_ids) AS `extension_ids`,
      JSON_VALUE(event_extra.failedLookups) AS `failedLookups`,
      JSON_VALUE(event_extra.family_name) AS `family_name`,
      JSON_VALUE(event_extra.fathom_infer_label) AS `fathom_infer_label`,
      JSON_VALUE(event_extra.fathom_infer_score) AS `fathom_infer_score`,
      JSON_VALUE(event_extra.feature) AS `feature`,
      JSON_VALUE(event_extra.feature_id) AS `feature_id`,
      JSON_VALUE(event_extra.feature_ids) AS `feature_ids`,
      JSON_VALUE(event_extra.featureId) AS `featureId`,
      JSON_VALUE(event_extra.field_name) AS `field_name`,
      JSON_VALUE(event_extra.fieldType) AS `fieldType`,
      JSON_VALUE(event_extra.file_extension) AS `file_extension`,
      JSON_VALUE(event_extra.file_name) AS `file_name`,
      JSON_VALUE(event_extra.filedetails) AS `filedetails`,
      JSON_VALUE(event_extra.fileinfo) AS `fileinfo`,
      JSON_VALUE(event_extra.filename) AS `filename`,
      JSON_VALUE(event_extra.filter) AS `filter`,
      JSON_VALUE(event_extra.filtering) AS `filtering`,
      JSON_VALUE(event_extra.first_panel) AS `first_panel`,
      JSON_VALUE(event_extra.flow) AS `flow`,
      JSON_VALUE(event_extra.flow_id) AS `flow_id`,
      JSON_VALUE(event_extra.frame_id) AS `frame_id`,
      JSON_VALUE(event_extra.from_language) AS `from_language`,
      JSON_VALUE(event_extra.function) AS `function`,
      JSON_VALUE(event_extra.functionality) AS `functionality`,
      JSON_VALUE(event_extra.fxa_avatar) AS `fxa_avatar`,
      JSON_VALUE(event_extra.fxa_status) AS `fxa_status`,
      JSON_VALUE(event_extra.fxa_sync_on) AS `fxa_sync_on`,
      JSON_VALUE(event_extra.generatedPasswo) AS `generatedPasswo`,
      JSON_VALUE(event_extra.given_name) AS `given_name`,
      JSON_VALUE(event_extra.hadPrevious) AS `hadPrevious`,
      JSON_VALUE(event_extra.hang_duration) AS `hang_duration`,
      JSON_VALUE(event_extra.has_jsonfile) AS `has_jsonfile`,
      JSON_VALUE(event_extra.has_olddata) AS `has_olddata`,
      JSON_VALUE(event_extra.hashed_addon_id) AS `hashed_addon_id`,
      JSON_VALUE(event_extra.host) AS `host`,
      JSON_VALUE(event_extra.hours_since) AS `hours_since`,
      JSON_VALUE(event_extra.html_lang_attribute) AS `html_lang_attribute`,
      JSON_VALUE(event_extra.ice_transport_policy) AS `ice_transport_policy`,
      JSON_VALUE(event_extra.identified_language) AS `identified_language`,
      JSON_VALUE(event_extra.iframe) AS `iframe`,
      JSON_VALUE(event_extra.image_type) AS `image_type`,
      JSON_VALUE(event_extra.importableLogin) AS `importableLogin`,
      JSON_VALUE(event_extra.inactive) AS `inactive`,
      JSON_VALUE(event_extra.infer_field_name) AS `infer_field_name`,
      JSON_VALUE(event_extra.infer_reason) AS `infer_reason`,
      JSON_VALUE(event_extra.input) AS `input`,
      JSON_VALUE(event_extra.input_type) AS `input_type`,
      JSON_VALUE(event_extra.insecureWarning) AS `insecureWarning`,
      JSON_VALUE(event_extra.install_id) AS `install_id`,
      JSON_VALUE(event_extra.install_origins) AS `install_origins`,
      JSON_VALUE(event_extra.is_enabled) AS `is_enabled`,
      JSON_VALUE(event_extra.issue) AS `issue`,
      JSON_VALUE(event_extra.item) AS `item`,
      JSON_VALUE(event_extra.item_name) AS `item_name`,
      JSON_VALUE(event_extra.key_system) AS `key_system`,
      JSON_VALUE(event_extra.l10n_ids) AS `l10n_ids`,
      JSON_VALUE(event_extra.label) AS `label`,
      JSON_VALUE(event_extra.language) AS `language`,
      JSON_VALUE(event_extra.last_line) AS `last_line`,
      JSON_VALUE(event_extra.lib_stacks) AS `lib_stacks`,
      JSON_VALUE(event_extra.lines) AS `lines`,
      JSON_VALUE(event_extra.locale) AS `locale`,
      JSON_VALUE(event_extra.location) AS `location`,
      JSON_VALUE(event_extra.login) AS `login`,
      JSON_VALUE(event_extra.loginsFooter) AS `loginsFooter`,
      JSON_VALUE(event_extra.made_changes) AS `made_changes`,
      JSON_VALUE(event_extra.main_frame) AS `main_frame`,
      JSON_VALUE(event_extra.media_extension) AS `media_extension`,
      JSON_VALUE(event_extra.message) AS `message`,
      JSON_VALUE(event_extra.message_count) AS `message_count`,
      JSON_VALUE(event_extra.message_key) AS `message_key`,
      JSON_VALUE(event_extra.method) AS `method`,
      JSON_VALUE(event_extra.mime_type) AS `mime_type`,
      JSON_VALUE(event_extra.ml_infer_label) AS `ml_infer_label`,
      JSON_VALUE(event_extra.ml_infer_score) AS `ml_infer_score`,
      JSON_VALUE(event_extra.ml_revision) AS `ml_revision`,
      JSON_VALUE(event_extra.mlbf_generation) AS `mlbf_generation`,
      JSON_VALUE(event_extra.mlbf_last_time) AS `mlbf_last_time`,
      JSON_VALUE(event_extra.mlbf_softblocks_generation) AS `mlbf_softblocks_generation`,
      JSON_VALUE(event_extra.mlbf_softblocks_source) AS `mlbf_softblocks_source`,
      JSON_VALUE(event_extra.mlbf_source) AS `mlbf_source`,
      JSON_VALUE(event_extra.mode) AS `mode`,
      JSON_VALUE(event_extra.model) AS `model`,
      JSON_VALUE(event_extra.model_id) AS `model_id`,
      JSON_VALUE(event_extra.modelDownloadId) AS `modelDownloadId`,
      JSON_VALUE(event_extra.modelId) AS `modelId`,
      JSON_VALUE(event_extra.modelRevision) AS `modelRevision`,
      JSON_VALUE(event_extra.name) AS `name`,
      JSON_VALUE(event_extra.networkID) AS `networkID`,
      JSON_VALUE(event_extra.networkUnstable) AS `networkUnstable`,
      JSON_VALUE(event_extra.newpanel) AS `newpanel`,
      JSON_VALUE(event_extra.next_panel) AS `next_panel`,
      JSON_VALUE(event_extra.num_strings) AS `num_strings`,
      JSON_VALUE(event_extra.object) AS `object`,
      JSON_VALUE(event_extra.oldpanel) AS `oldpanel`,
      JSON_VALUE(event_extra.open_type) AS `open_type`,
      JSON_VALUE(event_extra.opened_from) AS `opened_from`,
      JSON_VALUE(event_extra.openingReason) AS `openingReason`,
      JSON_VALUE(event_extra.operation) AS `operation`,
      JSON_VALUE(event_extra.option_clicked) AS `option_clicked`,
      JSON_VALUE(event_extra.organization) AS `organization`,
      JSON_VALUE(event_extra.originalReason) AS `originalReason`,
      JSON_VALUE(event_extra.os) AS `os`,
      JSON_VALUE(event_extra.page_type) AS `page_type`,
      JSON_VALUE(event_extra.panel_name) AS `panel_name`,
      JSON_VALUE(event_extra.part_id) AS `part_id`,
      JSON_VALUE(event_extra.pc_id) AS `pc_id`,
      JSON_VALUE(event_extra.platform) AS `platform`,
      JSON_VALUE(event_extra.playback_type) AS `playback_type`,
      JSON_VALUE(event_extra.postal_code) AS `postal_code`,
      JSON_VALUE(event_extra.prefBranch) AS `prefBranch`,
      JSON_VALUE(event_extra.preference) AS `preference`,
      JSON_VALUE(event_extra.preferenceName) AS `preferenceName`,
      JSON_VALUE(event_extra.preferred_recv_codec) AS `preferred_recv_codec`,
      JSON_VALUE(event_extra.preferred_send_codec) AS `preferred_send_codec`,
      JSON_VALUE(event_extra.prefName) AS `prefName`,
      JSON_VALUE(event_extra.prefType) AS `prefType`,
      JSON_VALUE(event_extra.previous_language) AS `previous_language`,
      JSON_VALUE(event_extra.previousState) AS `previousState`,
      JSON_VALUE(event_extra.principal_type) AS `principal_type`,
      JSON_VALUE(event_extra.principalType) AS `principalType`,
      JSON_VALUE(event_extra.process_id) AS `process_id`,
      JSON_VALUE(event_extra.profile_state) AS `profile_state`,
      JSON_VALUE(event_extra.prompt_enabled) AS `prompt_enabled`,
      JSON_VALUE(event_extra.provider_key) AS `provider_key`,
      JSON_VALUE(event_extra.reader_time) AS `reader_time`,
      JSON_VALUE(event_extra.reason) AS `reason`,
      JSON_VALUE(event_extra.redirects) AS `redirects`,
      JSON_VALUE(event_extra.region) AS `region`,
      JSON_VALUE(event_extra.remotetype) AS `remotetype`,
      JSON_VALUE(event_extra.request_target) AS `request_target`,
      JSON_VALUE(event_extra.require_signon) AS `require_signon`,
      JSON_VALUE(event_extra.reset_error_name) AS `reset_error_name`,
      JSON_VALUE(event_extra.resolution) AS `resolution`,
      JSON_VALUE(event_extra.result) AS `result`,
      JSON_VALUE(event_extra.results) AS `results`,
      JSON_VALUE(event_extra.retryCount) AS `retryCount`,
      JSON_VALUE(event_extra.run_id) AS `run_id`,
      JSON_VALUE(event_extra.runtime_id) AS `runtime_id`,
      JSON_VALUE(event_extra.runtime_name) AS `runtime_name`,
      JSON_VALUE(event_extra.runtime_os) AS `runtime_os`,
      JSON_VALUE(event_extra.runtime_type) AS `runtime_type`,
      JSON_VALUE(event_extra.runtime_version) AS `runtime_version`,
      JSON_VALUE(event_extra.sample) AS `sample`,
      JSON_VALUE(event_extra.sandboxed) AS `sandboxed`,
      JSON_VALUE(event_extra.scenario) AS `scenario`,
      JSON_VALUE(event_extra.scheme) AS `scheme`,
      JSON_VALUE(event_extra.scroll_position) AS `scroll_position`,
      JSON_VALUE(event_extra.search_domain) AS `search_domain`,
      JSON_VALUE(event_extra.selfdetails) AS `selfdetails`,
      JSON_VALUE(event_extra.selftype) AS `selftype`,
      JSON_VALUE(event_extra.session_id) AS `session_id`,
      JSON_VALUE(event_extra.setting) AS `setting`,
      JSON_VALUE(event_extra.severity) AS `severity`,
      JSON_VALUE(event_extra.shortcut) AS `shortcut`,
      JSON_VALUE(event_extra.signature) AS `signature`,
      JSON_VALUE(event_extra.signed_date) AS `signed_date`,
      JSON_VALUE(event_extra.site_host) AS `site_host`,
      JSON_VALUE(event_extra.skip_reason) AS `skip_reason`,
      JSON_VALUE(event_extra.slug) AS `slug`,
      JSON_VALUE(event_extra.sort_key) AS `sort_key`,
      JSON_VALUE(event_extra.source) AS `source`,
      JSON_VALUE(event_extra.source_file) AS `source_file`,
      JSON_VALUE(event_extra.source_method) AS `source_method`,
      JSON_VALUE(event_extra.source_of_change) AS `source_of_change`,
      JSON_VALUE(event_extra.sourcedetails) AS `sourcedetails`,
      JSON_VALUE(event_extra.sourcetype) AS `sourcetype`,
      JSON_VALUE(event_extra.splitconsole) AS `splitconsole`,
      JSON_VALUE(event_extra.stack_id) AS `stack_id`,
      JSON_VALUE(event_extra.start_state) AS `start_state`,
      JSON_VALUE(event_extra.status) AS `status`,
      JSON_VALUE(event_extra.steeredProvider) AS `steeredProvider`,
      JSON_VALUE(event_extra.step) AS `step`,
      JSON_VALUE(event_extra.street_address) AS `street_address`,
      JSON_VALUE(event_extra.stringLength) AS `stringLength`,
      JSON_VALUE(event_extra.subcategory) AS `subcategory`,
      JSON_VALUE(event_extra.survey_id) AS `survey_id`,
      JSON_VALUE(event_extra.suspicious_site) AS `suspicious_site`,
      JSON_VALUE(event_extra.taar_based) AS `taar_based`,
      JSON_VALUE(event_extra.tab_pos) AS `tab_pos`,
      JSON_VALUE(event_extra.table_name) AS `table_name`,
      JSON_VALUE(event_extra.target_type) AS `target_type`,
      JSON_VALUE(event_extra.taskName) AS `taskName`,
      JSON_VALUE(event_extra.tel) AS `tel`,
      JSON_VALUE(event_extra.text_source) AS `text_source`,
      JSON_VALUE(event_extra.time) AS `time`,
      JSON_VALUE(event_extra.time_open) AS `time_open`,
      JSON_VALUE(event_extra.time_span) AS `time_span`,
      JSON_VALUE(event_extra.timestamp) AS `timestamp`,
      JSON_VALUE(event_extra.tip_id) AS `tip_id`,
      JSON_VALUE(event_extra.to_language) AS `to_language`,
      JSON_VALUE(event_extra.top_preferred_language) AS `top_preferred_language`,
      JSON_VALUE(event_extra.topic) AS `topic`,
      JSON_VALUE(event_extra.tracker_changed) AS `tracker_changed`,
      JSON_VALUE(event_extra.trigger) AS `trigger`,
      JSON_VALUE(event_extra.trr) AS `trr`,
      JSON_VALUE(event_extra.type) AS `type`,
      JSON_VALUE(event_extra.typeWasPassword) AS `typeWasPassword`,
      JSON_VALUE(event_extra.updated_from) AS `updated_from`,
      JSON_VALUE(event_extra.uptime) AS `uptime`,
      JSON_VALUE(event_extra.uri_type) AS `uri_type`,
      JSON_VALUE(event_extra.user_selection) AS `user_selection`,
      JSON_VALUE(event_extra.utm_campaign) AS `utm_campaign`,
      JSON_VALUE(event_extra.utm_content) AS `utm_content`,
      JSON_VALUE(event_extra.utm_medium) AS `utm_medium`,
      JSON_VALUE(event_extra.utm_source) AS `utm_source`,
      JSON_VALUE(event_extra.value) AS `value`,
      JSON_VALUE(event_extra.variant_shown) AS `variant_shown`,
      JSON_VALUE(event_extra.version) AS `version`,
      JSON_VALUE(event_extra.video_codec) AS `video_codec`,
      JSON_VALUE(event_extra.view_name) AS `view_name`,
      JSON_VALUE(event_extra.width) AS `width`
    ) AS `string`
  ) AS extras
FROM
  `moz-fx-data-shared-prod.org_mozilla_klar_derived.events_stream_v1`
